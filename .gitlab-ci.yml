variables:
  GIT_SUBMODULE_STRATEGY: normal
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  BUILDKIT_INLINE_CACHE: 1
  DOCKER_TLS_CERTDIR: ""
  SAST_SEMGREP_METRICS: "false"
  SAST_EXCLUDED_ANALYZERS: "sobelow"

stages:
  - prepare
  - build
  - test
  - release
  - deploy

include:
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.php_security_checker.yml'
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.deployer_tchooz_v2.yml'
- project: 'emundus/devops/ci-cd-templates'
  ref: main
  file: '.release-template.yml'
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml

check-commit-prefixes-job:
  stage: prepare
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never
  image: enix/ci-toolbox:1.23
  script:
    - .docker/scripts/commit-prefix-compliance-check.sh "$CI_SERVER_URL" "$GITLAB_TOKEN" "$CI_PROJECT_ID" "$CI_MERGE_REQUEST_IID"

php_security_checker:
  variables:
      COMPOSER_PATH: "./libraries/emundus/composer.lock"

php_security_checker_gantry5:
  extends:
    - php_security_checker
  variables:
    COMPOSER_PATH: "./libraries/gantry5/composer.lock"

build-app-to-test-job:
  stage: build
  services:
    - name: docker:24.0.5-dind
  image: docker:24.0.5
  before_script:
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull emundus/tchooz-test-app:latest || true
    - docker build --cache-from emundus/tchooz-test-app:latest --compress -t emundus/tchooz-test-app:latest --build-arg=BUILDKIT_INLINE_CACHE=1 --build-arg test_env=1 .
    - docker push emundus/tchooz-test-app:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_DEFAULT_BRANCH == $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      changes:
        - Dockerfile
        - .docker/scripts/entrypoint-build-ci-env.sh

deploy-A:
  stage: deploy
  script:
    - echo "deploy-A pour le tag $CI_COMMIT_TAG"
  only:
    - tags

deploy-B:
  stage: deploy
  script:
    - echo "deploy-B pour le tag $CI_COMMIT_TAG"
  rules:
    - if: '$CI_COMMIT_TAG'

build-db-to-test-job:
  stage: build
  services:
    - name: docker:24.0.5-dind
  image: docker:24.0.5
  before_script:
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker pull emundus/tchooz-test-db:latest || true
    - docker build --cache-from emundus/tchooz-test-db:latest --compress -f Dockerfile.db -t emundus/tchooz-test-db:latest --build-arg=BUILDKIT_INLINE_CACHE=1 .
    - docker push emundus/tchooz-test-db:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_DEFAULT_BRANCH == $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      changes:
        - Dockerfile.db
        - .docker/mysql/*
        - .docker/installation/databases/*
        - .docker/installation/database-ci-env/*

phpunit-job:
  stage: test
  image: emundus/tchooz-test-app:latest
  services:
    - name: emundus/tchooz-test-db:latest
      alias: database
    - redis:7
  before_script:
    - php -v
    - libraries/emundus/composer.phar install --working-dir=tests/
    - /entrypoint.sh
    - cat configuration.php
    - apache2-foreground &
  script:
    - tests/vendor/phpunit/phpunit/phpunit -c tests/phpunit.xml --no-coverage
  only:
    - merge_request

release-patch:
  extends: .release-template
  variables:
    MERGE_MESSAGE: "Merge branch 'hotfix' into 'master'"
    RELEASE_TYPE: "patch"

release-minor:
  extends: .release-template
  variables:
    MERGE_MESSAGE: "Merge branch 'dev' into 'master'"
    RELEASE_TYPE: "minor"



#test_playwright:
#  image: mcr.microsoft.com/playwright:v1.43.0-jammy
#  script:
#    - git clone $PLAYWRIGHT_ACCESS
#    - cd playwright
#    - npm ci
#    - npx playwright install
#    - npx playwright test
#  variables:
#    PLAYWRIGHT_ACCESS: $PLAYWRIGHT_ACCESS
#    BASE_URL: $PLAYWRIGHT_RELEASE_BASE_URL
#    COORD_USERNAME: $PLAYWRIGHT_RELEASE_COORD_USERNAME
#    COORD_PASSWORD: $PLAYWRIGHT_RELEASE_COORD_PASSWORD
#    SYSADMIN_USERNAME: $PLAYWRIGHT_RELEASE_SYSADMIN_USERNAME
#    SYSADMIN_PASSWORD: $PLAYWRIGHT_RELEASE_SYSADMIN_PASSWORD
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#      when: manual
#    - if: $CI_PIPELINE_SOURCE == "schedule"
#  allow_failure: true
#  artifacts:
#    when: always
#    expose_as: 'Playwright Report'
#    paths:
#      - playwright/playwright-report
#    expire_in: 4 days
#  needs:
#    - job: deployer
#      optional: true
#    - job: deployer_test_playwright_in_schedule
#      optional: true
